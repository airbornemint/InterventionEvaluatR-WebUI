stages:
  - build
  - deploy
  
variables:
  DOCKER_IMAGE_WEBUI: "${CI_REGISTRY_IMAGE}/interventionevaluatr-web-ui-ci:ci-${CI_PIPELINE_IID}"
  DOCKER_IMAGE_WEBUI_REF: "${CI_REGISTRY_IMAGE}/interventionevaluatr-web-ui-ci:ci-${CI_COMMIT_REF_SLUG}"
  DOCKER_IMAGE_WEBUI_MASTER: "${CI_REGISTRY_IMAGE}/interventionevaluatr-web-ui-ci:ci-master"
  DOCKER_IMAGE_SHINYPROXY: "${CI_REGISTRY_IMAGE}/interventionevaluatr-shinyproxy-ci:ci-${CI_PIPELINE_IID}"
  DOCKER_IMAGE_SHINYPROXY_REF: "${CI_REGISTRY_IMAGE}/interventionevaluatr-shinyproxy-ci:ci-${CI_COMMIT_REF_SLUG}"
  DOCKER_IMAGE_SHINYPROXY_MASTER: "${CI_REGISTRY_IMAGE}/interventionevaluatr-shinyproxy-ci:ci-master"
  APP_WEBUI: "app/interventionevaluatr-web-ui-${CI_PIPELINE_IID}.tar.xz"
  DOCKER_CONTAINER: "interventionevaluatr-web-ui"

.build:
  stage: build
  tags:
    - dind
  image: docker:18-dind
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker login -u gitlab-ci-token -p "${CI_BUILD_TOKEN}" "${CI_REGISTRY_IMAGE}"
    # Build web UI docker image
    - docker pull "${DOCKER_IMAGE_WEBUI_REF}" || true
    - docker pull "${DOCKER_IMAGE_WEBUI_MASTER}" || true
    - docker build --cache-from "${DOCKER_IMAGE_WEBUI_REF}" --cache-from "${DOCKER_IMAGE_WEBUI_MASTER}" -t "${DOCKER_IMAGE_WEBUI}" -t "${DOCKER_IMAGE_WEBUI_REF}" WebUI
    - docker push "${DOCKER_IMAGE_WEBUI}" 
    - docker push "${DOCKER_IMAGE_WEBUI_REF}"
    # Build ShinyProxy docker image (referencing the app image)
    - docker pull "${DOCKER_IMAGE_SHINYPROXY_REF}" || true
    - docker pull "${DOCKER_IMAGE_SHINYPROXY_MASTER}" || true
    - docker build --cache-from "${DOCKER_IMAGE_SHINYPROXY_REF}" --cache-from "${DOCKER_IMAGE_SHINYPROXY_MASTER}" -t "${DOCKER_IMAGE_SHINYPROXY}" -t "${DOCKER_IMAGE_SHINYPROXY_REF}" --build-arg "APP_IMAGE=${DOCKER_IMAGE_WEBUI}" shinyproxy
    - docker push "${DOCKER_IMAGE_SHINYPROXY}" 
    - docker push "${DOCKER_IMAGE_SHINYPROXY_REF}"
    # Save app source in a build artifact
    - mkdir -p "app"
    - tar -cvzf "${APP_WEBUI}" WebUI
  artifacts:
    paths:
      - "${APP_WEBUI}"

build-dev:
  extends: .build
  artifacts:
    expire_in: 30 days

build-rel:
  extends: .build
  only:
    - tags

.deploy:
  tags:
    - docker-machine
  stage: deploy
  script:
    - docker login -u gitlab-ci-token -p "${CI_BUILD_TOKEN}" "${CI_REGISTRY_IMAGE}"
    - docker-machine --debug status "${MACHINE_NAME}" && docker-machine --debug provision "${MACHINE_NAME}"
    - docker-machine --debug status "${MACHINE_NAME}" || docker-machine --debug create --driver digitalocean --digitalocean-access-token "${DIGITAL_OCEAN_ACCESS_TOKEN}" --digitalocean-image ubuntu-16-04-x64 --digitalocean-monitoring --digitalocean-region=sfo2 --digitalocean-tags=InterventionEvaluatR --digitalocean-size "s-1vcpu-2gb" "${MACHINE_NAME}" 
    - docker $(docker-machine config "${MACHINE_NAME}") rm --force "${DOCKER_CONTAINER}" || true
    # Set up docker networking
    - docker $(docker-machine config "${MACHINE_NAME}") network inspect InterventionEvaluatR || docker $(docker-machine config "${MACHINE_NAME}") network create InterventionEvaluatR
    - docker $(docker-machine config "${MACHINE_NAME}") run --restart=always --detach  --volume /var/run/docker.sock:/var/run/docker.sock --net InterventionEvaluatR --publish 80:8080 --name "${DOCKER_CONTAINER}" "${DOCKER_IMAGE_SHINYPROXY}"
    - docker $(docker-machine config "${MACHINE_NAME}") system prune --all --force
    # Pull the WebUI image on deploy to reduce delay on first load
    - docker $(docker-machine config "${MACHINE_NAME}") pull "${DOCKER_IMAGE_WEBUI}"
  dependencies: []
    
deploy-dev:
  extends: .deploy
  variables:
    MACHINE_NAME: InterventionEvaluatR-dev

deploy-rel:
  extends: .deploy
  variables:
    MACHINE_NAME: InterventionEvaluatR-rel
  only:
    - tags
  when: manual

